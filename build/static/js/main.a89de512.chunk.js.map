{"version":3,"sources":["logo.svg","components/Game/gameObject.js","components/Game/game.js","components/login.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Card","suite","denomination","this","cardMap","2","3","4","5","6","7","8","9","10","prototype","biggerCard","card2","createDeck","deck","suits","values","suit","value","push","i","m","length","Math","floor","random","shuffleDeck","connect","state","username","dispatch","setUsername","type","payload","props","useState","usersDeck","setUsersDeck","compDeck","setCompDeck","usersWonDeck","setUsersWonDeck","compWonDeck","setCompWonDeck","tie","setTie","winner","setWinner","userChoice","setUserChoice","compChoice","setCompChoice","winningArr","setWinningArr","playDisabled","setPlayDisabled","userTally","setUserTally","token","localStorage","getItem","config","headers","useEffect","fullDeck","slice","undefined","history","axios","get","then","res","data","score","catch","err","setItem","updateUserTally","a","put","console","log","tied","tiedCard","winnings","tempUsersDeck","tempCompDeck","concat","pop","usersFinalDraw","compFinalDraw","checkStateOfGame","usersWinnings","compsWinnings","Button","onClick","Typography","data-testid","disabled","usersCard","compCard","tempUsersWonDeck","tempCompWonDeck","userWon","setTimeout","deckPop","variant","reset","style","display","justifyContent","useStyles","makeStyles","theme","container","flexDirection","alignItems","width","button","background","border","borderRadius","boxShadow","color","marginTop","height","textDecoration","textAlign","textfield","header","fontWeight","errormessage","options","optionButton","padding","selectedButton","backgroundColor","classes","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","selected","setSelected","handleClick","e","validPW","upperCase","digit","currentChar","charAt","toUpperCase","RegExp","test","validatePassword","validateForm","preventDefault","usernameLower","toLowerCase","signup","login","post","response","status","className","TextField","placeholder","name","fullWidth","onChange","event","target","onKeyPress","key","to","pathname","middleware","thunk","initialState","persistedState","serializedState","JSON","parse","loadFromLocalStorage","store","createStore","action","applyMiddleware","subscribe","stringify","saveToLocalStorage","getState","App","path","exact","component","Login","Game","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a89de512.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function Card(suite, denomination) {\n    this.suite = suite;\n    this.denomination = denomination\n}\nconst cardMap = { 'Ace': 14, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 'Jack': 11, 'Queen': 12, 'King': 13 }\nCard.prototype.biggerCard = function (card2) {\n    if (cardMap[this.denomination] == cardMap[card2.denomination]) return 0;\n    if (cardMap[this.denomination] > cardMap[card2.denomination]) return 1\n    return -1;\n}\nfunction shuffleDeck(deck) {\n    let m = deck.length, i;\n    while (m) {\n        i = Math.floor(Math.random() * m--);\n\n        [deck[m], deck[i]] = [deck[i], deck[m]];\n    }\n    return deck;\n}\nfunction createDeck() {\n    const deck = [];\n    const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n    const values = ['Ace', 2, 3, 4, 5, 6, 7, 8, 9, 10, 'Jack', 'Queen', 'King'];\n    for (let suit in suits) {\n        for (let value in values) {\n            deck.push(new Card(suits[suit], values[value]));\n        }\n    }\n    return shuffleDeck(deck);\n}\n\nexport default createDeck;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { useLocation } from 'react-router-dom'\nimport { Typography, Button } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport createDeck from './gameObject'\nfunction Game(props) {\n    const [usersDeck, setUsersDeck] = useState([])\n    const [compDeck, setCompDeck] = useState([])\n    const [usersWonDeck, setUsersWonDeck] = useState([])\n    const [compWonDeck, setCompWonDeck] = useState([])\n    const [tie, setTie] = useState(false)\n    const [winner, setWinner] = useState('')\n    const [userChoice, setUserChoice] = useState('')\n    const [compChoice, setCompChoice] = useState('')\n    const [winningArr, setWinningArr] = useState([])\n    const [playDisabled, setPlayDisabled] = useState(false)\n    const [userTally, setUserTally] = useState(null)\n    const token = localStorage.getItem('token')\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\",\n            'x-auth-token': `${token}`\n        }\n    }\n    useEffect(() => {\n        const fullDeck = createDeck()\n        setUsersDeck(fullDeck.slice(0, 26))\n        setCompDeck(fullDeck.slice(26, 52))\n        if (props.username == '' || token == null || token == undefined || token == \"\") props.history.push('/')\n        axios.get(`http://ec2-18-217-213-221.us-east-2.compute.amazonaws.com:5000/api/score/${props.username}`, config)\n            .then((res) => {\n                setUserTally(res.data.score[\"games_won\"])\n            }).catch((err) => {\n                localStorage.setItem(\"token\", \"\")\n            })\n    }, [])\n    const updateUserTally = async function () {\n        axios.put(\"http://ec2-18-217-213-221.us-east-2.compute.amazonaws.com:5000/api/score\", { username: props.username }, config)\n            .then((res) => {\n                setUserTally(userTally + 1)\n            }).catch((err) => {\n                localStorage.setItem(\"token\", \"\")//token has expired\n                console.log(err)\n            })\n    }\n    const deckPop = () => {\n        if (winningArr.length > 0) {\n            tied(null)\n            return\n        }\n        const usersCard = usersDeck.pop();\n        const compCard = compDeck.pop();\n        setCompChoice(compCard)\n        setUserChoice(usersCard)\n        const userWon = usersCard.biggerCard(compCard)\n        let tempUsersWonDeck, tempCompWonDeck;\n        if (userWon == 1) {\n            tempUsersWonDeck = [...usersWonDeck, compCard, usersCard]\n            tempCompWonDeck = compWonDeck\n            setUsersWonDeck(tempUsersWonDeck)\n            setTie('')\n        } else if (userWon == -1) {\n            tempCompWonDeck = [...compWonDeck, compCard, usersCard]\n            tempUsersWonDeck = usersWonDeck\n            setCompWonDeck(tempCompWonDeck)\n            setTie('')\n        }\n        else {\n            setTie(\"Let's begin the WAR\")\n            setPlayDisabled(true)\n            setTimeout(() => {\n                tied(usersCard)\n                setPlayDisabled(false)\n            }, 1500)\n        }\n        if (usersWonDeck != undefined && tempCompWonDeck != undefined) checkStateOfGame(usersWonDeck, tempCompWonDeck)\n    }\n\n    const tied = (tiedCard) => {\n        let winnings = winningArr\n        let tempUsersDeck = usersDeck\n        let tempCompDeck = compDeck\n        if (tiedCard != null) {\n            winnings.push(tiedCard)\n            winnings.push(tiedCard)\n        }\n        if (tempUsersDeck.length < 4) {\n            tempUsersDeck = tempUsersDeck.concat(usersWonDeck)\n            if (tempUsersDeck.length < 4) {\n                // reset()\n                setWinner('The comp won, you doesnt have enough cards to finish WAR')\n                return\n            }\n            setUsersDeck(tempUsersDeck)\n            setUsersWonDeck([])\n        }\n        if (tempCompDeck.length < 4) {\n            tempCompDeck = tempCompDeck.concat(compWonDeck)\n            if (tempUsersDeck.length < 4) {\n                // reset()\n                setWinner('The user won, opponent doesnt have enough cards to finish WAR')\n                return\n            }\n            setCompDeck(tempCompDeck)\n            setCompWonDeck([])\n        }\n        for (let i = 0; i < 3; i++) {\n            winnings.push(tempUsersDeck.pop())\n            winnings.push(tempCompDeck.pop())\n            // winnings.push(...[tempUsersDeck.pop(),tempCompDeck.pop()])\n        }\n        const usersFinalDraw = tempUsersDeck.pop()\n        const compFinalDraw = tempCompDeck.pop()\n        const winner = usersFinalDraw.biggerCard(compFinalDraw)\n        winnings.push(usersFinalDraw)\n        winnings.push(compFinalDraw)\n        setTie(`The tie has been resolved and ${winner == 1 ? 'you' : 'the comp'} takes home all ${winnings.length} cards`)\n        if (winner == 1) {\n            setUsersWonDeck(usersWonDeck.concat(winnings))\n            winnings = []\n            setWinningArr([])\n        } else if (winner == -1) {\n            setCompWonDeck(compWonDeck.concat(winnings))\n            winnings = []\n            setWinningArr([])\n        } else {\n            setTie(\"There is another tie!\")\n            setWinningArr(winnings)\n        }\n    }\n\n    const checkStateOfGame = (usersWinnings, compsWinnings) => {\n        if (usersDeck.length <= 0 && usersWonDeck.length <= 0) {\n            // reset()\n            setWinner(\"comp won\")\n            return\n        }\n        if (compDeck.length <= 0 && compWonDeck.length <= 0) {\n            // reset()\n            setWinner(\"user won\")\n            updateUserTally()\n            return\n        }\n        if (usersDeck.length <= 0 && usersWinnings.length > 0) {\n            setUsersDeck(usersWinnings)\n            setUsersWonDeck([])\n        }\n        if (compDeck.length <= 0 && compsWinnings.length > 0) {\n            setCompDeck(compsWinnings)\n            setCompWonDeck([])\n        }\n    }\n    const reset = () => {\n        const fullDeck = createDeck()\n        setUsersDeck(fullDeck.slice(0, 26))\n        setCompDeck(fullDeck.slice(26, 52))\n        setUsersWonDeck([])\n        setCompWonDeck([])\n        setWinningArr([])\n        setWinner(\"\")\n        setTie(\"\")\n    }\n    const logOut = () => {\n        props.setUsername(\"\");\n        localStorage.setItem(\"token\", \"\");\n        props.history.push('/')\n    }\n    if (props.username) {\n        return (\n            <div>\n                <Button onClick={() => logOut()}>LOGOUT</Button>\n                <Typography >\n                    {props.username}'s win tally is {userTally}\n                </Typography>\n                {\n                    winner == \"\" ?\n                        <Button data-testid=\"playButton\" disabled={playDisabled} onClick={() => deckPop()}>\n                            Play\n                    </Button>\n                        :\n                        null\n                }\n                <Typography variant={'h3'}>\n                    {winner}\n                    {winner != \"\" ? <Button onClick={() => reset()}>Play again</Button> : null}\n                </Typography>\n                <div style={{ display: 'flex', justifyContent: 'space-between', }}>\n                    <div>\n                        <Typography>Users regular deck size{usersDeck.length}</Typography>\n                        <Typography>Users won deck size:{usersWonDeck.length}</Typography>\n                        {/* {usersWonDeck.map((card, i) =>\n                        <div key={i}>\n                            <Typography variant={'h6'}>\n                                {card.denomination} {card.suite}\n                            </Typography>\n                        </div>\n                    )} */}\n                    </div>\n                    <div>\n                        <Typography>You chose a {userChoice.denomination}</Typography>\n                        <Typography>Computer chose a {compChoice.denomination}</Typography>\n                        {tie}\n                    </div>\n                    <div>\n                        <Typography>Comps regular deck size{compDeck.length}</Typography>\n                        <Typography>Comps won deck size:{compWonDeck.length}</Typography>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return null;\n}\n\nconst mapStateToProps = state => (\n    {\n        username: state.username\n    }\n)\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUsername: (username) => {\n            dispatch({ type: 'SET_USERNAME', payload: username })\n        }\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Game);","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    width: {\n        width: '30%'\n    },\n    button: {\n        background: '#35578f',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px #33435e',\n        color: 'white',\n        marginTop: 30,\n        height: '50px',\n        textDecoration: 'none',\n        display: 'block',\n        textAlign: 'center',\n        \"&:hover\": {\n            //you want this to be the same as the backgroundColor above\n            background: '#33435e'\n        }\n    },\n    textfield: {\n        marginTop: 20\n    },\n    header: {\n        marginTop: 60,\n        fontWeight: \"bold\",\n        color: \"#7d2022\"\n    },\n    errormessage: {\n        color: \"red\"\n    },\n    options: {\n        display: \"flex\"\n    },\n    optionButton: {\n        padding: 5,\n        border: 2\n    },\n    selectedButton: {\n        backgroundColor: \"gray\"\n    }\n})\n)\nfunction Login(props) {\n    const classes = useStyles()\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [selected, setSelected] = useState('signup')\n    useEffect(() => {\n        // props.setUsername(\"\")\n    }, [])\n    function handleClick(e) {\n        if (!validateForm()) {\n            e.preventDefault();\n            return\n        }\n        e.preventDefault()\n        const usernameLower = username.toLowerCase()\n        if (selected == 'signup') signup(usernameLower, password)\n        else {\n            login(usernameLower, password)\n        }\n    }\n    const login = (username, password) => {\n        axios.post(\"http://ec2-18-217-213-221.us-east-2.compute.amazonaws.com:5000/api/login\", {\n            username,\n            password\n        }).then((res) => {\n            const token = res.data.token;\n            localStorage.setItem('token', token);\n            props.setUsername(username)\n            setTimeout(() => props.history.push('/game'), 500)\n            //I know this isnt best practices but redux is async and needed game component to access state imediately!\n        }).catch((err) => {\n            if (err.response.status == 404) {\n                setUsernameError(err.response.data)\n                setPasswordError('')\n            }\n            else {\n                setUsernameError('')\n                setPasswordError(err.response.data)\n            }\n        })\n    }\n    const signup = (username, password, e) => {\n        axios.post(\"http://ec2-18-217-213-221.us-east-2.compute.amazonaws.com:5000/api/signup\", {\n            username,\n            password\n        }).then((res) => {\n            const token = res.data.token;\n            localStorage.setItem('token', token);\n            props.setUsername(username)\n            setTimeout(() => props.history.push('/game'), 1000)\n        }).catch((err) => {\n            console.log(err)\n            if (err.response.status == 404) {\n                setUsernameError(err.response.data)\n                setPasswordError('')\n            }\n            else {\n                setUsernameError('')\n                setPasswordError(err.response.data)\n            }\n        })\n    }\n    function validateForm() {\n        let validPW = validatePassword()\n        if (username.length === 0) {\n            setUsernameError(\"Username is empty\");\n            return false;\n        }\n        else if (password.length === 0) {\n            setUsernameError(\"\");\n            setPasswordError(\"password is empty\");\n            return false;\n        } else if (!validPW) {\n            setUsernameError(\"\");\n            setPasswordError(\"password must have at least one uppercase and one digit\")\n            return false;\n        }\n        return true;\n    }\n    function updateUsername(event) {\n        setUsername(event.target.value);\n    }\n    function updatePassword(event) {\n        setPassword(event.target.value);\n    }\n    function validatePassword() {\n        let upperCase = 0;\n        let digit = 0;\n        for (var i = 0; i < password.length; i++) {\n            let currentChar = password.charAt(i)\n            if (currentChar === currentChar.toUpperCase()) upperCase++;\n            const pattern = new RegExp(/^[\\d]$/);\n            if (pattern.test(currentChar)) digit++;\n        }\n        if (digit > 0 && digit < password.length && upperCase > 0 && upperCase < password.length) return true\n        return false;\n    }\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.header} variant=\"h4\">\n                Let's play WAR!\n            </Typography>\n            <div className={classes.options}>\n                <Button onClick={() => setSelected('signup')} className={[classes.optionButton, selected == 'signup' ? classes.selectedButton : null]}>\n                    Signup\n                </Button>\n                <Button data-testid=\"setLogin\" onClick={() => setSelected('login')} className={[classes.optionButton, selected == 'login' ? classes.selectedButton : null]}>\n                    Login\n                </Button>\n            </div>\n\n            <div className={classes.width}>\n                <div className=\"spaceForInput\">\n                    {usernameError.length > 0 && <div className={classes.errormessage}>{usernameError}</div>}\n                    <TextField\n                        placeholder=\"Enter Username*\"\n                        name=\"username\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        className={classes.textfield}\n                        onChange={updateUsername}\n                    />\n                </div>\n                <div className=\"spaceForInput\">\n                    <TextField\n                        placeholder=\"Enter Password*\"\n                        name=\"password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        fullWidth\n                        onChange={updatePassword}\n                        className={classes.textfield}\n                        onKeyPress={event => event.key === 'Enter' ? handleClick(event) : null}\n                    />\n                    {passwordError.length > 0 && <div className={classes.errormessage}>{passwordError}</div>}\n                </div>\n                <Link to={{\n                    pathname: '/game',\n                    state: { \"username\": username }\n                }} style={{ textDecoration: 'none' }} onClick={(e) => handleClick(e)}>\n                    <Button data-testid=\"login\" fullWidth className={classes.button}>\n                        {selected == 'signup' ? 'signup' : 'login'}\n                    </Button>\n                </Link>\n            </div>\n        </div>\n\n    );\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUsername: (username) => {\n            dispatch({ type: 'SET_USERNAME', payload: username })\n        }\n    }\n}\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Login);","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nconst middleware = [thunk];\nconst initialState = {\n    username: ''\n}\nfunction userReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.payload\n            }\n        default:\n            return state\n    }\n}\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    } catch (e) {\n        console.log(e)\n    }\n}\nfunction loadFromLocalStorage() {\n    try {\n        const serializedState = localStorage.getItem('state')\n        if (serializedState === null) return undefined\n        return JSON.parse(serializedState)\n    } catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(userReducer, persistedState, applyMiddleware(...middleware));\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport default store","import logo from './logo.svg';\nimport './App.css';\nimport Game from \"./components/Game/game\"\nimport Login from \"./components/login\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/game\" component={Game} />\n        </div>\n      </Router>\n    </Provider>\n    \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}